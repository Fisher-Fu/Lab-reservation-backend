<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kreadcn.homework.dao.AdminLabMapper">
    <resultMap id="BaseResultMap" type="kreadcn.homework.model.AdminLab">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="admin_id" jdbcType="INTEGER" property="adminId"/>
        <result column="lab_id" jdbcType="INTEGER" property="labId"/>
        <result column="created_by" jdbcType="INTEGER" property="createdBy"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, admin_id, lab_id, created_by
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_lab
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectByAdminId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_lab
        where admin_id = #{adminId,jdbcType=INTEGER}
    </select>
    <select id="selectByLabId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from admin_lab
        where lab_id = #{labId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from admin_lab
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="kreadcn.homework.model.AdminLab">
        insert into admin_lab (id, admin_id, lab_id,
        created_by)
        values (#{id,jdbcType=INTEGER}, #{adminId,jdbcType=INTEGER}, #{labId,jdbcType=INTEGER},
        #{createdBy,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="kreadcn.homework.model.AdminLab">
        insert into admin_lab
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="adminId != null">
                admin_id,
            </if>
            <if test="labId != null">
                lab_id,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="adminId != null">
                #{adminId,jdbcType=INTEGER},
            </if>
            <if test="labId != null">
                #{labId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                #{createdBy,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="kreadcn.homework.model.AdminLab">
        update admin_lab
        <set>
            <if test="adminId != null">
                admin_id = #{adminId,jdbcType=INTEGER},
            </if>
            <if test="labId != null">
                lab_id = #{labId,jdbcType=INTEGER},
            </if>
            <if test="createdBy != null">
                created_by = #{createdBy,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="kreadcn.homework.model.AdminLab">
        update admin_lab
        set admin_id = #{adminId,jdbcType=INTEGER},
        lab_id = #{labId,jdbcType=INTEGER},
        created_by = #{createdBy,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <delete id="deleteByAdminIds">
        delete
        from admin_lab
        where admin_id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
    <delete id="deleteByLabIds">
        delete
        from admin_lab
        where lab_id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>
</mapper>